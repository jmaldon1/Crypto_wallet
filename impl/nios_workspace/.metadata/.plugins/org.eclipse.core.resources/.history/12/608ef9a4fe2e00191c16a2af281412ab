#include <stdio.h>
#include <unistd.h>
#include <string.h>

/*libbtc includes*/
#include <btc.h>
#include <tx.h>

#include "system.h"
#include "altera_avalon_pio_regs.h"
#include "sys/alt_sys_wrappers.h"
#include "alt_types.h"

#include "uart_usb.h"
//#include "bip39.h"



void initialize()
{
	/* initialize hardware random number generator */
	alt_u32 randSeed = 0x12345678;
    initRandom(randSeed);

    /* initialize uart to usb */
    initUart();
}



int main()
{
    initialize();
//    void *memory_test = malloc(1024 * 1024 * 10);
//    printf("SDRAM malloc returned 0x%08lx\n", (alt_u32)memory_test);
	PutStrUart("FPGA Cryptocurreny Wallet\n");

	alt_u8 data[32];
	getRandomBuffer(&(data[0]), 32);


//	const char *mnemonic_phrase = mnemonic_generate(128);
//	printf("MNEMONIC PHRASE: %s\n", mnemonic_phrase);

	char buffer[2048];

	sprintf(buffer, "Random Buffer:\n");
	PutStrUart((char *)&(buffer[0]));

	for(int i = 0; i < 32; ++i)
	{
		sprintf(buffer, "0x%02x\n", data[i]);
		PutStrUart((char *)&(buffer[0]));
	}

//	sprintf(buffer, "Menmonic phrase: %s\n", mnemonic_phrase);
//	PutStrUart((char *)&(buffer[0]));

	alt_u8 count = 0;
	alt_u32 randVal;
//	char buffer[1024];
    while(1)
    {
    	uartGetLine();
		count++;
		if ((count % 1000000000) == 0)
		{
	    	randVal = u32getRandom();
	    	IOWR_ALTERA_AVALON_PIO_DATA(PO_LED_BASE, randVal & 0xFF);
//	    	sprintf(buffer, "Random value: 0x%08x\n", randVal);
//	    	PutStrUart((char *)&(buffer[0]));
		}
		ALT_USLEEP(100);
    }
    closeUart();
    return 0;
}

